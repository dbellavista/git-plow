#!/usr/bin/env sh

ask_global() {
  printf "Setup global $1? [Y/n] "
  read answer
  name=${name:-Y}
  if [[ "$name" == "Y" ]] || [[ "$name" == "y" ]]; then
    return 0
  else
    return 1
  fi
}

cmd_init() {
  if gitplow_is_initialized; then

    echo "Git Plow is already initialized"

  else
    if ! gitflow_is_initialized; then
      git flow init
    fi
    if ! gitplow_only_is_initialized; then


      DOMAIN=$(get_gitlab_domain)
      if [[ -z "$DOMAIN" ]]; then
        local flags=''
        if ask_global "domain"; then
          flags="--global"
        fi
        printf "Insert gitlab domain: "
        read answer
        git config $flags --replace-all gitplow.gitlab.domain "$answer" || exit 1
      fi

      PROTOCOL=$(get_gitlab_protocol)
      if [[ -z "$PROTOCOL" ]]; then
        local flags=''
        if ask_global "protocol (https/http)"; then
          flags="--global"
        fi
        printf "Insert gitlab domain [https]: "
        read answer
        answer=${answer:-https}
        git config $flags --replace-all gitplow.gitlab.protocol "$answer" || exit 1
      fi

      PRIVATETOKEN=$(get_gitlab_token)
      if [[ -z "$PRIVATETOKEN" ]]; then
        local flags=''
        if ask_global "private token"; then
          flags="--global"
        fi
        printf "Insert gitlab api token: "
        read answer
        git config $flags --replace-all gitplow.gitlab.token "$answer"
      fi

      PROJECTID=$(get_gitlab_prid)
      if [[ -z "$PROJECTID" ]]; then
        printf "Insert gitlab projectID: "
        read answer
        git config --type int --replace-all gitplow.gitlab.projectid "$answer" || exit 1
      fi

      IAMADMIN=$(i_am_admin)
      if [[ -z "$IAMADMIN" ]]; then
        printf "Are you a project admin? [y|N]"
        read answer
        answer=${answer:-N}
        if [[ "$answer" == "y" ]] || [[ "$answer" == "Y" ]]; then
          answer="true"
        else
          answer="false"
        fi
        git config --type bool --replace-all gitplow.gitlab.admin "$answer" || exit 1
      fi
    fi
  fi
}
